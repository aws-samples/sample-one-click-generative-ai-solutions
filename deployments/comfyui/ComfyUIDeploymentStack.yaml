AWSTemplateFormatVersion: '2010-09-09'
Description: 'ComfyUI one click deployment'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "ComfyUI Deployment Parameters"
        Parameters:
          - Environment
          - NotificationEmailAddress
          - SelfSignUp
          - AllowedSignUpEmailDomains
          - AllowedIpV4AddressRanges
          - AllowedIpV6AddressRanges

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name to use for deployment
  
  NotificationEmailAddress:
    Type: String
    Description: 'Email address to receive deployment notifications (Example: test@example.co.jp)'
    AllowedPattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
    ConstraintDescription: Must be a valid email address
  
  SelfSignUp:
    Type: String
    AllowedValues: [true, false]
    Default: false
    Description: 'Enable self-signup functionality (CAUTION Carefully consider when you allow public access)'
  
  AllowedSignUpEmailDomains:
    Type: String
    Default: ""
    Description: 'Allowed email domains for signup (Example: example1.co.jp, example2.co.jp)'
  
  AllowedIpV4AddressRanges:
    Type: String
    Default: ""
    Description: 'Allowed IPv4 address ranges for access (Example: 10.0.0.100/32, 192.168.0.0/24). Find your current Public IP address here: https://checkip.amazonaws.com/'
  
  AllowedIpV6AddressRanges:
    Type: String
    Default: ""
    Description: Allowed IPv6 address ranges for access

Resources:

  # SNS Topic for deployment notifications
  DeploymentNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: ComfyUI Deployment Notifications
      TopicName: !Sub 'Notification-for-${AWS::StackName}'
      KmsMasterKeyId: 'alias/aws/sns'

  # SNS Subscription for email notifications
  DeploymentNotificationSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref DeploymentNotificationTopic
      Endpoint: !Ref NotificationEmailAddress

  # IAM Role for CodeBuild
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess"

  # IAM Policy for CodeBuild
  CodeBuildServiceRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeBuildServiceRolePolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ComfyUIDeploymentProject}:*"
              - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ComfyUIDeploymentProject}"
          - Action:
              - sns:Publish
            Effect: Allow
            Resource: !Ref DeploymentNotificationTopic
      Roles:
        - !Ref CodeBuildServiceRole

  # CodeBuild Project
  ComfyUIDeploymentProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 'CodeBuild-for-${AWS::StackName}'
      Description: 'Deploys ComfyUI'
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux-x86_64-standard:5.0
        PrivilegedMode: false
        EnvironmentVariables:
          - Name: Environment
            Value: !Ref Environment
          - Name: SelfSignUp
            Value: !Ref SelfSignUp
          - Name: AllowedSignUpEmailDomains
            Value: !Ref AllowedSignUpEmailDomains
          - Name: AllowedIpV4AddressRanges
            Value: !Ref AllowedIpV4AddressRanges
          - Name: AllowedIpV6AddressRanges
            Value: !Ref AllowedIpV6AddressRanges
          - Name: SNSTopicArn
            Value: !Ref DeploymentNotificationTopic
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 22
              commands:
                - echo "Starting ComfyUI deployment"
                - aws sns publish --topic-arn ${SNSTopicArn} --subject "ComfyUI Deployment Started" --message "Deployment of ComfyUI has started. You will receive another notification when deployment is complete."
                - git clone https://github.com/aws-samples/cost-effective-aws-deployment-of-comfyui.git

            pre_build:
              commands:
                - cd $CODEBUILD_SRC_DIR/cost-effective-aws-deployment-of-comfyui
                - cp app.py app.py.backup

                # Create and run unified parameter script (updates app.py and creates JSON for Parameter Store)
                - |
                  cat > update-params.py << EOF
                  import os
                  import json

                  # 1. Open app.py
                  file_path = 'app.py'
                  with open(file_path, 'r', encoding='utf-8') as f:
                      content = f.read()
                  
                  # 2. Compose the string incrementally
                  # Process arrays first
                  self_sign_up = 'True' if os.environ.get('SelfSignUp') == 'true' else 'False'
                  
                  allowed_sign_up_email_domains = None
                  if os.environ.get('AllowedSignUpEmailDomains'):
                      allowed_sign_up_email_domains = [d.strip() for d in os.environ.get('AllowedSignUpEmailDomains').split(',')]
                  
                  allowed_ipv4_address_ranges = None
                  if os.environ.get('AllowedIpV4AddressRanges'):
                      allowed_ipv4_address_ranges = [r.strip() for r in os.environ.get('AllowedIpV4AddressRanges').split(',')]
                  
                  allowed_ipv6_address_ranges = None
                  if os.environ.get('AllowedIpV6AddressRanges'):
                      allowed_ipv6_address_ranges = [r.strip() for r in os.environ.get('AllowedIpV6AddressRanges').split(',')]
                  
                  # Build replacement parts
                  parts = [
                      f'self_sign_up_enabled={self_sign_up}',
                      f'allowed_sign_up_email_domains={allowed_sign_up_email_domains}',
                      f'allowed_ip_v4_address_ranges={allowed_ipv4_address_ranges}',
                      f'allowed_ip_v6_address_ranges={allowed_ipv6_address_ranges}'
                  ]

                  # Join with proper indentation
                  replacement = ',\\n    '.join(parts)

                  # 3. Replace # Override Parameters.*/ with the composed string
                  import re
                  content = re.sub(r'# Override Parameters.*', replacement, content)

                  # Write the updated content back to the file
                  with open(file_path, 'w', encoding='utf-8') as f:
                      f.write(content)
                  print(f'Successfully updated {file_path}')
                  EOF
                  
                  python3 update-params.py

            build:
              commands:
                - cd $CODEBUILD_SRC_DIR/cost-effective-aws-deployment-of-comfyui

                # Deploy the stack
                - make cdk-deploy-force

                # Get the application URL
                - cd $CODEBUILD_SRC_DIR/
                - |
                  STACK_NAME=$(aws cloudformation describe-stacks --query "Stacks[?contains(StackName, 'ComfyUIStack${Environment}')].StackName" --output text)
                  APP_URL=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='Endpoint'].OutputValue" --output text)
                  USER_POOL=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='UserPoolId'].OutputValue" --output text)
                  AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
                  USER_CREATION_URL="https://${AWS_ACCOUNT_ID}.${AWS_DEFAULT_REGION}.console.aws.amazon.com/cognito/v2/idp/user-pools/${USER_POOL}/user-management/users?region=${AWS_DEFAULT_REGION}"

                  cat << EOF > deployment-info.txt
                  ComfyUI Deployment Completed Successfully!
                  Deployment Time: $(date '+%Y-%m-%d %H:%M:%S')

                  Login URL: ${APP_URL}

                  Important Next Steps:
                  1. Please create a user in the Cognito User Pool to access the application (if self-signup disabled):
                     ${USER_CREATION_URL}

                  Configuration:
                  Environment: ${Environment}
                  Self-Signup Enabled: ${SelfSignUp}
                  Allowed SignUp Email Domains: ${AllowedSignUpEmailDomains}
                  Allowed IpV4 Address Ranges: ${AllowedIpV4AddressRanges}
                  Allowed IpV6 Address Ranges: ${AllowedIpV6AddressRanges}

                  Stack Details:
                  Stack Name: ${STACK_NAME}
                  Region: ${AWS_DEFAULT_REGION}

                  EOF

            post_build:
              commands:
                - cd $CODEBUILD_SRC_DIR/
                - aws sns publish --topic-arn "${SNSTopicArn}" --subject "ComfyUI Deployment Complete" --message file://deployment-info.txt
                - rm -rf cost-effective-aws-deployment-of-comfyui
          artifacts:
            files:
              - deployment-info.txt
      TimeoutInMinutes: 120

  # Custom Resource to trigger CodeBuild
  DeploymentTrigger:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt TriggerFunction.Arn
      ProjectName: !Ref ComfyUIDeploymentProject
      ServiceTimeout: 600

  # Lambda function for the Custom Resource
  TriggerFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt TriggerFunctionRole.Arn
      Runtime: nodejs20.x
      Timeout: 30
      Code:
        ZipFile: |
          const { CodeBuildClient, StartBuildCommand } = require('@aws-sdk/client-codebuild');
          const response = require('cfn-response');

          exports.handler = async (event, context) => {
            console.log('Event:', JSON.stringify(event, null, 2));
            
            const physicalResourceId = `CodeBuildTrigger-${event.ResourceProperties.ProjectName}`;
            const responseData = {};
            
            try {
              const codebuild = new CodeBuildClient({ 
                region: process.env.AWS_REGION,
                maxAttempts: 3
              });

              if (event.RequestType === 'Create' || event.RequestType === 'Update') {
                const command = new StartBuildCommand({ 
                  projectName: event.ResourceProperties.ProjectName 
                });
                const result = await codebuild.send(command);
                responseData.BuildId = result.build.id;
              }
              
              await response.send(event, context, response.SUCCESS, responseData, physicalResourceId);
            } catch (error) {
              console.error('Error:', error);
              await response.send(event, context, response.FAILED, { Error: error.message }, physicalResourceId);
            }
          };

  # IAM Role for Lambda Trigger Function
  TriggerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: CodeBuildStartPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: codebuild:StartBuild
                Resource: !GetAtt ComfyUIDeploymentProject.Arn


Outputs:
  NotificationTopicArn:
    Description: ARN of the SNS topic for deployment notifications
    Value: !Ref DeploymentNotificationTopic
  
  CodeBuildProjectName:
    Description: Name of the CodeBuild project
    Value: !Ref ComfyUIDeploymentProject
  
  CodeBuildLogGroup:
    Description: CloudWatch Logs group for CodeBuild logs
    Value: !Sub '/aws/codebuild/${ComfyUIDeploymentProject}'
  
  DeploymentStatus:
    Description: Deployment status information
    Value: !Sub "Deployment has been initiated. You will receive an email notification at ${NotificationEmailAddress} when the deployment is complete."
